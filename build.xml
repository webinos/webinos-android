<?xml version="1.0" encoding="UTF-8"?>
<project name="webinos" default="debug" basedir="./">

	<macrodef name = "git">
	    <attribute name = "command" />
	    <attribute name = "dir" default = "" />
	    <element name = "args" optional = "true" />
	    <sequential>
		<echo message = "git @{command}" />
		<exec executable = "git" dir = "@{dir}">
		    <arg value = "@{command}" />
		    <args/>
		</exec>
	    </sequential>
	</macrodef>
	<macrodef name = "git-clone-pull">
	    <attribute name = "repository" />
	    <attribute name = "dest" />
	    <sequential>
		<git command = "clone">
		    <args>
		        <arg value = "@{repository}" />
		        <arg value = "@{dest}" />
		    </args>
		</git>
		<git command = "pull" dir = "@{dest}" />
	    </sequential>
	</macrodef>

	<!-- ANDROID_HOME and ANODE_ROOT environment variables must be defined -->

	<target name="gen-webinos">
 	
	 <!-- comment out installation of enrolment widiget. Add this support shortly -->
		<!-- Get the enrolment app and prepare it for package -->
		<!-- <git-clone-pull repository="git://github.com/webinos/app-pzp-enrolment.git" dest="${basedir}/webinos/platform/android/tmp-app-enrolment" />
		<ant antfile="build.xml" dir="${basedir}/webinos/platform/android/tmp-app-enrolment"/>
		<copy todir="${basedir}/webinos/web_root/apps/wrt/">
			<fileset dir="${basedir}/webinos/platform/android/tmp-app-enrolment/installed"/> 
		</copy> -->

		<!-- delete compiled node addons that were built for pc arch -->
		<delete file="node_modules/webinos-pzp/node_modules/webinos-certificateHandler/node_modules/certificate_manager.node" />
		<delete file="node_modules/webinos-pzp/node_modules/webinos-certificateHandler/node_modules/webinos-keyStorage/node_modules/keystore.node" />
		<delete file="node_modules/webinos-pzp/node_modules/webinos-policy/node_modules/pm.node" />
		<delete file="node_modules/webinos-pzp/node_modules/webinos-policy/node_modules/promptMan.node" />

				<!-- Creates app/assets/webinos.zip -->
		<zip destfile="${basedir}/app/assets/modules/webinos.zip">
			<zipfileset dir="${basedir}"
			includes="
				node_modules/webinos-pzp/,
				node_modules/webinos-widget/"
			excludes="
				**/build/,
				**/deps/,
				**/.gitignore"/>
		</zip>

                <!-- Creates webinos/web_root/webinos.js
                <ant dir="${basedir}/webinos" target="gen-webinos-js" /> -->

		<!-- Copies webinos/web_root/webinos.js to wrt/assets folder -->
		<copy file="${basedir}/node_modules/webinos-pzp/web_root/webinos.js" todir="${basedir}/wrt/assets/js" />
	</target>

	<target name="gen-webinos-clean">

		<!-- Removes app/assets/webinos.zip -->
		<delete file="${basedir}/app/assets/modules/webinos.zip" />

		<!-- Removes wrt/assets/js/webinos.js -->
		<delete file="${basedir}/wrt/assets/js/webinos.js" />
	</target>

	<target name="debug-apks" depends="gen-webinos">

		<!-- Builds app/bin/app-debug.apk
		Can be installed with the command: adb install app/bin/app-debug.apk -->
		<ant dir="${basedir}/wrt" target="debug" />

		<!-- Builds wrt/bin/wrt-debug.apk
		Can be installed with the command: adb install wrt/bin/wrt-debug.apk -->
		<ant dir="${basedir}/app" target="debug" />

	</target>

	<target name="release-apks" depends="gen-webinos">

		<!-- Builds app/bin/app-release.apk
		Can be installed with the command: adb install app/bin/app-release.apk -->
		<ant dir="${basedir}/wrt" target="release" />

		<!-- Builds wrt/bin/wrt-release.apk
		Can be installed with the command: adb install wrt/bin/wrt-release.apk -->
		<ant dir="${basedir}/app" target="release" />

	</target>

	<target name="debug" depends="debug-apks">

		<!-- Builds installer/bin/installer-debug.apk
		Can be installed with the command: adb install installer/bin/installer-debug.apk -->
		<ant dir="${basedir}/installer" target="debug" />

	</target>

	<target name="release" depends="release-apks">

		<!-- Builds installer/bin/installer-release.apk
		Can be installed with the command: adb install installer/bin/installer-release.apk -->
		<ant dir="${basedir}/installer" target="release" />

	</target>

	<target name="clean" depends="gen-webinos-clean">

		<!-- cleans wrt/bin/wrt-*.apk -->
		<ant dir="${basedir}/wrt" target="clean" />

		<!-- cleans app/bin/app-*.apk -->
		<ant dir="${basedir}/app" target="clean" />

		<!-- cleans installer/bin/installer-*.apk -->
		<ant dir="${basedir}/installer" target="clean" />

	</target>
</project>
